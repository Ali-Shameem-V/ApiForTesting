// <auto-generated />
using System;
using ApiForTesting.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiForTesting.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230817083724_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiForTesting.Data.appuser", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("AppUserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("appusers_shameem");
                });

            modelBuilder.Entity("ApiForTesting.Data.usertype", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserTypeId");

                    b.ToTable("usertypes_shameem");
                });

            modelBuilder.Entity("ApiForTesting.Data.appuser", b =>
                {
                    b.HasOne("ApiForTesting.Data.usertype", "UserType")
                        .WithMany("appusers")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("ApiForTesting.Data.usertype", b =>
                {
                    b.Navigation("appusers");
                });
#pragma warning restore 612, 618
        }
    }
}
